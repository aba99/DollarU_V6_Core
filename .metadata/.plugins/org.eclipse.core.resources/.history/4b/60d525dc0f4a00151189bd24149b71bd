package com.orsyp.client.amex;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import au.com.bytecode.opencsv.CSVReader;

import com.orsyp.tools.ps.Connector;


public class FileWatcher {

	private static HashMap<String,String> reference = new HashMap<String,String>();
	
	public static void main(String[] args) throws Exception  
	{		

		String refFile = args[0];
		String configFile = args[1];
		String path = args[2];
		
		
		readReferenceFile(refFile);
		
		Connector conn = new Connector(configFile,true,"CABRIN_",false,"",false,"");

		
		System.out.println("Scanning following path '"+path+"'");
		final File folder = new File(path);

		while(true)
		{
			ArrayList<String> currentFiles = listFilesForFolder(folder);
		
			for(int f=0;f<currentFiles.size();f++)
			{
				
				
				
			}
		
			
		
		}
		
		
		

	}
	public static HashMap<String,String> listFilesForFolder(final File folder) {
		
		HashMap<String,String> currentFilesToProcess= new HashMap<String,String>();
		
		
	    for (final File fileEntry : folder.listFiles()) {
	        
	    	if (fileEntry.isDirectory()) 
	        {
	            listFilesForFolder(fileEntry);
	        }
	        else 
	        {
	            
	        	if(fileEntry.getName().endsWith(".TRIGGER"))
	            {
	            
		           
		            	String gnum = getGoogleNumber(fileEntry.getName());
		            	String cabrinjob = getCabrinUprocName(fileEntry.getName());
		            	
			            if(currentFilesToProcess.containsKey(entryFromRefFile))
			            {
			            	int new_gnum =Integer.parseInt(fileEntry.getName());
			            	int existing_gnum = Integer.parseInt(genericEntry_googoo.get(entryFromRefFile));
			            	
			            	if(new_gnum<existing_gnum)
			            	{
			            		currentFiles.add(fileEntry.getName());
			            		genericEntry_googoo.put(entryFromRefFile, Integer.toString(new_gnum));
			            	}
			            }
	
		            }
	        }
	    }
	    }
	    return currentFiles;
	}
	
	public static String getGoogleNumber(String fullFilename)
	{// *.G0000V00.TRIGGER needs to be parsed
		fullFilename=fullFilename.replace(".TRIGGER","");
		int length= fullFilename.length();
		
		
		fullFilename=fullFilename.substring(length-8, length);
		return fullFilename.substring(3, 5);
		
	}
	public static String getCabrinUprocName(String fullFilename)
	{
		
	}
	
	public static void readReferenceFile(String fileName) throws IOException
	{
		 @SuppressWarnings("resource")
		CSVReader reader = new CSVReader(new FileReader(fileName),',', '\"', '\0');
			
			String [] line;			

			//parse lines
			while ((line = reader.readNext()) != null) 
		    {	    	
				
		        if(line.length>1)
		        {
		        	String key=line[0];
		        	String value=line[1];
		        
		        	
		        		reference.put(key, value);
		        }
		        	
		        		
		        
		    }	
	}

	public static String getGenericKeyFileName(String filename)
	{//get filename without googlenumber, that is stored as a key in the reference table
		for(String key:reference.keySet())
		{
			if(filename.contains(key))
			{
				return key;
			}
		}
		
		return null;
	}
	
}
